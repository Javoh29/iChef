import 'package:flutter/material.dart';import 'package:flutter_svg/svg.dart';import 'package:ichef/config/constants/assets.dart';import 'package:ichef/config/constants/local_data.dart';import 'package:ichef/presentation/pages/favorites/favorite_tab_page.dart';import 'package:modal_bottom_sheet/modal_bottom_sheet.dart';import '../../../config/constants/app_colors.dart';import '../../../config/constants/app_decorations.dart';import '../../../config/constants/app_text_styles.dart';import '../../components/custom_badge.dart';class FavoritesPage extends StatefulWidget {  const FavoritesPage({Key? key}) : super(key: key);  @override  State<FavoritesPage> createState() => _FavoritesPageState();}class _FavoritesPageState extends State<FavoritesPage>    with SingleTickerProviderStateMixin {  late final TabController _tabController =      TabController(length: 4, vsync: this);  List tabList = [    'Понравилось',    'К готовке',    'Приготовлено',    'Любимые',  ];  @override  void initState() {    super.initState();    _tabController.addListener(() => setState(() {}));  }  @override  Widget build(BuildContext context) {    return NestedScrollView(      physics: const NeverScrollableScrollPhysics(),      headerSliverBuilder: (context, innerBoxIsScrolled) {        return <Widget>[          appBar(innerBoxIsScrolled),        ];      },      body: TabBarView(        controller: _tabController,        children: [          FavoritesTabPage(            listRecipes: listRecipes,          ),          FavoritesTabPage(            listRecipes: listRecipes,          ),          FavoritesTabPage(            listRecipes: listRecipes,          ),          FavoritesTabPage(            listRecipes: listRecipes,          ),        ],      ),    );  }  SliverAppBar appBar(bool innerBoxIsScrolled) {    return SliverAppBar(      pinned: true,      floating: true,      centerTitle: true,      automaticallyImplyLeading: false,      forceElevated: innerBoxIsScrolled,      title: Text(        'Избранное',        style: AppTextStyles.b5Regular.copyWith(          fontWeight: FontWeight.w700,        ),      ),      actions: [        IconButton(          icon: SvgPicture.asset(Assets.icons.filter),          onPressed: () {},        ),        IconButton(          icon: SvgPicture.asset(Assets.icons.threePoint),          onPressed: () {            showCupertinoModalBottomSheet(              context: context,              bounce: true,              topRadius: const Radius.circular(30),              // barrierColor: Colors.black45,              // backgroundColor: Colors.transparent,              builder: (context) {                return BottomSheetModel(                  leadingIcon: Assets.icons.bSheetClose,                  title: 'Новый раздел',                  children: Column(                    children: [                      BSheetItemWidget(                        title: 'Переименовать папку',                        onTap: () {},                        leading: Assets.icons.variation,                      ),                      BSheetItemWidget(                        title: 'Переименовать папку',                        onTap: () {},                        leading: Assets.icons.variation,                      ),                      BSheetItemWidget(                        title: 'Переименовать папку',                        onTap: () {},                        leading: Assets.icons.variation,                      ),                      BSheetItemWidget(                        title: 'Переименовать папку',                        onTap: () {},                        leading: Assets.icons.variation,                      ),                    ],                  ),                );              },            );          },        ),      ],      bottom: tabBar(),    );  }  TabBar tabBar() {    return TabBar(      isScrollable: true,      padding: const EdgeInsets.symmetric(horizontal: 5),      controller: _tabController,      unselectedLabelStyle:          AppTextStyles.b5Regular.copyWith(color: AppColors.metalColor.shade50),      labelStyle: AppTextStyles.b5Regular.copyWith(color: AppColors.baseLight),      indicator: UnderlineTabIndicator(        borderSide: BorderSide(width: 4.0, color: AppColors.primaryLight),      ),      tabs: List.generate(        4,        (index) {          return Tab(            height: 22,            child: Row(              mainAxisAlignment: MainAxisAlignment.center,              children: [                Text(tabList[index]),                CustomBadge(                  text: '24K',                  isActive: _tabController.index == index,                ),              ],            ),          );        },      ),    );  }}class BottomSheetModel extends StatelessWidget {  const BottomSheetModel({    Key? key,    this.title,    this.actions,    this.leadingIcon,    required this.children,  }) : super(key: key);  final String? title;  final List<Widget>? actions;  final Widget children;  final String? leadingIcon;  @override  Widget build(BuildContext context) {    return Padding(      padding: const EdgeInsets.all(20),      child: Column(        mainAxisSize: MainAxisSize.min,        children: [          title != null              ? Padding(                  padding: const EdgeInsets.only(bottom: 20.0),                  child: AppBar(                    elevation: 0,                    leadingWidth: 34,                    toolbarHeight: 36,                    leading: Container(                      width: 34,                      height: 34,                      decoration: AppDecorations.defDecor.copyWith(                        borderRadius: BorderRadius.circular(50),                      ),                      child: IconButton(                        splashRadius: 1,                        onPressed: () {                          debugPrint('OnTap');                        },                        icon: SvgPicture.asset(                          '$leadingIcon',                          fit: BoxFit.none,                        ),                      ),                    ),                    title: Text(                      '$title',                      style: AppTextStyles.b5DemiBold.copyWith(                        fontWeight: FontWeight.w700,                      ),                    ),                    actions: actions ??                        [                          TextButton(                            onPressed: () {},                            style: AppDecorations.buttonStyle(                              padding:                                  const EdgeInsets.symmetric(horizontal: 15),                              borderRadius: 12,                            ),                            child: Text(                              'Применить',                              style: AppTextStyles.b4Medium.copyWith(                                color: AppColors.baseLight.shade100,                              ),                            ),                          )                        ],                  ),                )              : Container(),          children        ],      ),    );  }}class BSheetItemWidget extends StatelessWidget {  const BSheetItemWidget({    Key? key,    this.leading,    required this.title,    required this.onTap,  }) : super(key: key);  final String? leading;  final String title;  final void Function() onTap;  @override  Widget build(BuildContext context) {    return GestureDetector(      onTap: onTap,      child: Container(        height: 48,        margin: const EdgeInsets.only(bottom: 6),        decoration: AppDecorations.defDecor,        padding: const EdgeInsets.symmetric(horizontal: 16),        child: Row(          children: [            leading != null                ? Padding(                    padding: const EdgeInsets.only(right: 12.0),                    child: SvgPicture.asset(leading ?? ''),                  )                : Container(),            Text(              title,              style: AppTextStyles.b5DemiBold,            )          ],        ),      ),    );  }}